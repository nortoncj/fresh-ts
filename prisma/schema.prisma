// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"  
}

model Store {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  userId        String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}
enum UserRole {
  ADMIN
  PREMIUM
  USER
}


model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  firstName     String?
  lastName      String?
  email         String?   @unique
  emailVerified DateTime?
  hashedPassword String?
  image         String?
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  favoriteIds   String[] @db.ObjectId
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.String 
  access_token       String? @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier   String
  token        String
  expires      DateTime

  @@unique([identifier, token])
}
